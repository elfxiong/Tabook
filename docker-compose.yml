kafka:
   image: spotify/kafka
   container_name: kafka
   environment:
      ADVERTISED_HOST: kafka
      ADVERTISED_PORT: 9092
   hostname: kafka

es:
   image: elasticsearch:2.0
   container_name: es
   ports:
      - "9200:9200"

reservation_consumer:
   image: tp33/django-docker:1.3
   container_name: reservation_consumer
   volumes:
      - ./reservation_consumer:/app
   links:
      - kafka:kafka
      - es:es
   command: bash -c "python reservation_consumer.py"

restaurant_consumer:
   image: tp33/django-docker:1.3
   container_name: restaurant_consumer
   volumes:
      - ./restaurant_consumer:/app
   links:
      - kafka:kafka
      - es:es
   command: bash -c "python restaurant_consumer.py"

models:
   container_name: tabook-isa-models
   image: tp33/django-docker:1.3
   external_links:
     - mysql:db
   volumes:
     - ./models:/app
   command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py loaddata fixture.json && mod_wsgi-express start-server --reload-on-changes ./Tabook_models/wsgi.py"
   ports:
     - "8001:8000"

exp:
   container_name: tabook-isa-exp
   image: tp33/django-docker:1.3
   links:
      - models:models-api
      - kafka:kafka
      - es:es
   ports:
      - "8002:8000"
   volumes:
      - ./experience:/app
   command: bash -c "pip install requests && sleep 10s && python manage.py pushexistinglistings && mod_wsgi-express start-server --reload-on-changes ./Tabook_exp/wsgi.py"

web:
   container_name: tabook-isa-web
   image: tp33/django-docker:1.3
   links:
      - exp:exp-api
   ports:
      - "8000:8000"
   volumes:
      - ./web:/app
   command: bash -c "pip install requests && mod_wsgi-express start-server --url-alias /static /app/Tabook_web/static --reload-on-changes ./Tabook_web/wsgi.py"
